import java.util.*;
import java.io.*;

public class Main {
    static int N;
    static int[] N_arr;
    static int M;
    static int[] M_arr;
    static boolean[][] dp;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());
        N_arr = new int[N + 1];
        st = new StringTokenizer(br.readLine());

        for (int i = 1; i <= N; i++) {
            N_arr[i] = Integer.parseInt(st.nextToken());
        }

        dp = new boolean[N + 1][N + 1];

        for (int i = 1; i <= N; i++) {
            dp[i][i] = true;
        }

        for (int i = 1; i < N; i++) {
            if (N_arr[i] == N_arr[i + 1]) {
                dp[i][i + 1] = true;
            }
        }

        for (int i = 3; i <= N; i++) {
            for (int j = 1; j <= N - i + 1; j++) {
                if (N_arr[j] == N_arr[j + i - 1] && dp[j + 1][j + i - 2]) {
                    dp[j][j + i - 1] = true;
                }
            }
        }

        st = new StringTokenizer(br.readLine());
        M = Integer.parseInt(st.nextToken());
        M_arr = new int[2];
        StringBuilder answer = new StringBuilder();

        for (int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            M_arr[0] = Integer.parseInt(st.nextToken());
            M_arr[1] = Integer.parseInt(st.nextToken());

            if (dp[M_arr[0]][M_arr[1]]) {
                answer.append(1);
            } else {
                answer.append(0);
            }

            answer.append("\n");
        }

        System.out.println(answer.toString());

    }

}
