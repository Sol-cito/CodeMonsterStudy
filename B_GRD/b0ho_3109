import java.util.*;

public class Main {

    static int R;
    static int C;
    static char[][] arr;
    static boolean[][] visit;
    static int[][] drx;
    static boolean flag;
    static int answer;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);

        R = sc.nextInt();
        C = sc.nextInt();
        arr = new char[R][C];
        visit = new boolean[R][C];
        drx = new int[][]{{-1, 1}, {0, 1}, {1, 1}};

        for (int i = 0; i < R; i++) {
            arr[i] = sc.next().toCharArray();
        }

        for (int i = 0; i < R; i++) {
            flag = false;
            dfs(i, 0);
        }

        System.out.println(answer);

    }

    public static void dfs(int x, int y) {
        visit[x][y] = true;

        if (y == C - 1) {
            answer++;
            flag = true;
            return;
        }

        for (int i = 0; i < drx.length; i++) {
            int nx = x + drx[i][0];
            int ny = y + drx[i][1];

            if (nx >= 0 && ny >= 0 && nx < R && ny < C) {
                if (!visit[nx][ny]) {
                    if (arr[nx][ny] == '.') {
                        dfs(nx, ny);
                        if (flag) {
                            return;
                        }
                    }
                }
            }
        }

    }

}
