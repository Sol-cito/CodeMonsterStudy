import java.util.*;

public class Main {

    static int N;
    static int C;
    static int[][] drx;
    static char[][] arr;
    static boolean[] visit;
    static int answer;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        N = sc.nextInt();
        C = sc.nextInt();
        drx = new int[][]{{-1, 0}, {1, 0}, {0, 1}, {0, -1}};
        arr = new char[N][C];
        visit = new boolean[26];
        answer = 0;

        for (int i = 0; i < N; i++) {
            String str = sc.next();
            char[] s_arr = str.toCharArray();
            for (int j = 0; j < C; j++) {
                arr[i][j] = s_arr[j];
            }
        }

        visit[arr[0][0] - 'A'] = true;
        dfs(0, 0, 1);

        System.out.println(answer);

    }

    public static void dfs(int a, int b, int cnt) {

        for (int i = 0; i < drx.length; i++) {
            int x = a + drx[i][0];
            int y = b + drx[i][1];

            if (x >= 0 && y >= 0 && x < N && y < C) {
                if (visit[arr[x][y] - 'A'] == false) {
                    visit[arr[x][y] - 'A'] = true;
                    dfs(x, y, cnt + 1);
                    visit[arr[x][y] - 'A'] = false;
                }
            }
        }

        if (cnt > answer) {
            answer = cnt;
        }

    }

}
