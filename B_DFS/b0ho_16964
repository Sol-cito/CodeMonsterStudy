import java.util.*;

public class Main {

    static int N;
    static List<Integer>[] arr;
    static List<Integer>[] list;
    static boolean[] visit;
    static int[] order;
    static List<Integer> cand;
    static int answer;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        N = sc.nextInt();
        arr = new ArrayList[N + 1];
        list = new ArrayList[N + 1];
        visit = new boolean[N + 1];
        order = new int[N];
        cand = new ArrayList<>();
        answer = 1;
        int start = 0;

        for (int i = 0; i < N + 1; i++) {
            arr[i] = new ArrayList<>();
            list[i] = new ArrayList<>();
        }

        for (int i = 1; i < N; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            arr[a].add(b);
            arr[b].add(a);
            //System.out.print(a + " ");
            //System.out.println(b);
        }

        for (int i = 0; i < N; i++) {
            order[i] = sc.nextInt();
        }


        for (int i = 0; i < N; i++) {
            //System.out.println(arr[order[i]]);
            for (int j = 0; j < arr[i].size(); j++) {
                for (int k = 0; k < order.length; k++) {
                    if (arr[i].get(j) == order[k]) {
                        System.out.println(arr[i].get(j));
                        list[i].add(order[k]);
                    }
                }
            }
            if (start == 0) {
                start = order[i];
            }
        }

//        for (int i = 0; i < list.length; i++) {
//            for (int j = 0; j < list[i].size(); j++) {
//                //System.out.print(list[i].get(j));
//            }
//            System.out.println();
//        }

        System.out.println(start);
        cand.add(start);
        dfs(start);

        for (int i = 0; i < cand.size(); i++) {
            System.out.println(cand.get(i));
        }

        for (int i = 0; i < N; i++) {
//            System.out.println(order[i]);
//            System.out.println(cand.get(i));
            if (order[i] != cand.get(i)) {
                answer = 0;
                break;
            }
        }

        System.out.println(answer);

    }

    public static void dfs(int a) {

        if (visit[a] == true) {
            return;
        }

        visit[a] = true;

        for (int i = 0; i < order.length; i++) {
            int next = list[a].get(i);
            if (visit[next] == false) {
                cand.add(next);
                dfs(next);
            }
        }

    }

}
