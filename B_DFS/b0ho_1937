import java.util.*;

public class Main {

    static int N;
    static int[][] arr;
    static boolean[][] visit;
    static int answer;
    static int[][] drx;
    static int[][] dp;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        N = sc.nextInt();
        arr = new int[N + 1][N + 1];
        visit = new boolean[N + 1][N + 1];
        answer = 1;
        drx = new int[][]{{-1, 0}, {1, 0}, {0, 1}, {0, -1}};
        dp = new int[N + 1][N + 1];

        for (int i = 1; i < N + 1; i++) {
            for (int j = 1; j < N + 1; j++) {
                arr[i][j] = sc.nextInt();
            }
        }

        for (int i = 1; i < N + 1; i++) {
            for (int j = 1; j < N + 1; j++) {
                answer = Math.max(answer, dfs(i, j));
            }
        }

        System.out.println(answer);

    }

    public static int dfs(int a, int b) {

        if (visit[a][b] == true) {
            return dp[a][b];
        }

        visit[a][b] = true;
        dp[a][b] = 1;

        for (int i = 0; i < drx.length; i++) {
            int x = a + drx[i][0];
            int y = b + drx[i][1];

            if (x > 0 && y > 0 && x < N + 1 && y < N + 1) {
                if (arr[a][b] < arr[x][y]) {
                    dp[a][b] = Math.max(dp[a][b], dfs(x, y) + 1);
                }
            }
        }

        return dp[a][b];

    }

}
