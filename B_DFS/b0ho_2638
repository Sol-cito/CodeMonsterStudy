import java.util.*;

public class Main {

    static int N;
    static int M;
    static int[][] drx;
    static int[][] arr;
    static int answer;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        N = sc.nextInt();
        M = sc.nextInt();
        drx = new int[][]{{-1, 0}, {1, 0}, {0, 1}, {0, -1}};
        arr = new int[N][M];
        answer = 0;

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                arr[i][j] = sc.nextInt();
            }
        }

        arr[0][0] = -1;

        while (true) {

            answer++;

            dfs(0, 0);

            if (finish() == true) {
                break;
            }

        }

        System.out.println(answer);

    }

    public static boolean finish() {

        boolean end = true;

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                if (arr[i][j] == 1 || arr[i][j] == 2) {
                    arr[i][j] = 1;
                    end = false;
                } else {
                    arr[i][j] = 0;
                }
            }
        }

        return end;

    }

    public static void dfs(int a, int b) {

        arr[a][b] = -1;

        for (int i = 0; i < drx.length; i++) {
            int x = a + drx[i][0];
            int y = b + drx[i][1];

            if (x >= 0 && y >= 0 && x < N && y < M) {
                if (arr[a][b] == -1 && arr[x][y] == 0) {
                    dfs(x, y);
                }
                if (arr[x][y] > 0) {
                    arr[x][y]++;
                }
            }
        }

    }

}
